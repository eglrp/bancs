//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 技术平台公共类库
//  @ File Name : task.h
//  @ Date : 2013/8/28
//  @ Author : disp
//
//


#if !defined(_CTASK_H)
#define _CTASK_H

#include "gtwsv.h"
#include "mintcpio.h"
#include "mqmanage.h"
#include "syscfg/syse.h"
#include "pkg/tpkgunpackheader.h"

#define Z400_TYPE_C000ETERMQ        100
#define Z400_TYPE_C000APPPARAM      101
#define Z400_TYPE_C000EAPPQ         102
#define Z400_TYPE_D000MAXT          201  
#define Z400_TYPE_D000SAPPQ         202
#define Z400_TYPE_E000BADREC        301  
#define Z400_TYPE_E000QTIMEOUT      302
#define Z400_TYPE_E000STIMEOUT      303
#define Z400_TYPE_E000APPPARAM      310

const int TIMEOUT_Q = 30;
const int TIMEOUT_S = 30;

class CTask
{
public:	
	CTask(void);
	CTask(int socket);
	virtual ~CTask(void);
    
public:
    int C000_PREPROCESS();
    int D000_SEND();
    int E000_RECEIVE();
    int Z400_TCP_MSG(int type);
  	static void SignalCleanup(int sig);   
  	 
public:
    bool GetEndFlag()               { return 	m_bWSEndFlag;       };
    bool GetLastMsgFlag()           { return 	m_bWSLastMessage;   };   
    void SetEndFlag(bool b)         { m_bWSEndFlag = b;             };
    void SetLastMsgFlag(bool b)     { m_bWSLastMessage = b;         };  

  	      
protected:
	bool m_bWSEndFlag , m_bWSLastMessage;		
	static CMintcpio    m_tcpio;
	CMqManage           m_mqm;	
	NCBS_QUEIO          queio_in,queio_out;
	CDict               m_dictIn,m_dictOut;
	CTPkgUnpackHeader   m_pkgUpackHeader;
			
    byte m_MsgData[sizeof(TCP_HEADER)+sizeof(MINTCPIO_DATA)];
	int  m_nMsgDataLen;
	
};

#endif  //_CTASK_H
